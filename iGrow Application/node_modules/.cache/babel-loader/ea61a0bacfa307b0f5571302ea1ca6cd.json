{"ast":null,"code":"var _jsxFileName = \"/Users/neiljasani/Codebase/iGrow Application/src/App.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { Center, ChakraProvider } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { useState, useEffect } from 'react';\nimport CountriesInfo from './components/CountriesInfo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [findCountry, setFindCountry] = useState(\"\");\n  const [countries, setCountries] = useState([]);\n\n  const onFindChange = event => {\n    setFindCountry(event.target.value);\n    console.log(event.target.value);\n  }; // to show countries after being filtered\n\n\n  const countriesToShow = findCountry != \"\" ? countries.filter(c => c.name.common.toLowerCase().includes(findCountry)) : [];\n  useEffect(() => {\n    const promise = axios.get('https://restcountries.com/v3.1/all');\n    promise.then(response => {\n      setCountries(response.data);\n    });\n  }, []); // 4bc72c7112c04849fcc7430d52eba260\n\n  console.log(countries);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Find countries\",\n        htmlSize: 10,\n        width: \"auto\",\n        \"margin-top\": 30,\n        onChange: onFindChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CountriesInfo, {\n      array: countriesToShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"8o3dwYdkxsgh7sCLqWmRCeJ4USc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","Center","ChakraProvider","Input","useState","useEffect","CountriesInfo","App","findCountry","setFindCountry","countries","setCountries","onFindChange","event","target","value","console","log","countriesToShow","filter","c","name","common","toLowerCase","includes","promise","get","then","response","data"],"sources":["/Users/neiljasani/Codebase/iGrow Application/src/App.js"],"sourcesContent":["import axios from 'axios';\nimport { Center, ChakraProvider } from '@chakra-ui/react';\nimport { Input } from '@chakra-ui/react';\nimport { useState, useEffect } from 'react';\nimport CountriesInfo from './components/CountriesInfo'\nfunction App() {\n  \n  const [findCountry, setFindCountry] = useState(\"\")\n  const [countries, setCountries] = useState([])\n  \n\n  const onFindChange = (event) => {\n    setFindCountry(event.target.value)\n    console.log(event.target.value)\n  }\n  // to show countries after being filtered\n  const countriesToShow = findCountry != \"\" ? countries.filter(c => \n    c.name.common.toLowerCase().includes(findCountry)) : []\n\n  useEffect(() => {\n  const promise = axios.get('https://restcountries.com/v3.1/all')\n  promise\n  .then(response=> {\n      setCountries(response.data)\n    })\n  }, [])\n  // 4bc72c7112c04849fcc7430d52eba260\n\n\n  \n\n\n  console.log(countries)\n  return (\n    <div>\n      <div>\n        <Input placeholder='Find countries' htmlSize={10} width='auto' margin-top={30} onChange={onFindChange}/>\n      </div>\n      <CountriesInfo array = {countriesToShow}/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,cAAjB,QAAuC,kBAAvC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,aAAP,MAA0B,4BAA1B;;;AACA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;;EAGA,MAAMQ,YAAY,GAAIC,KAAD,IAAW;IAC9BJ,cAAc,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;IACAC,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACC,MAAN,CAAaC,KAAzB;EACD,CAHD,CANa,CAUb;;;EACA,MAAMG,eAAe,GAAGV,WAAW,IAAI,EAAf,GAAoBE,SAAS,CAACS,MAAV,CAAiBC,CAAC,IAC5DA,CAAC,CAACC,IAAF,CAAOC,MAAP,CAAcC,WAAd,GAA4BC,QAA5B,CAAqChB,WAArC,CAD0C,CAApB,GAC+B,EADvD;EAGAH,SAAS,CAAC,MAAM;IAChB,MAAMoB,OAAO,GAAGzB,KAAK,CAAC0B,GAAN,CAAU,oCAAV,CAAhB;IACAD,OAAO,CACNE,IADD,CACMC,QAAQ,IAAG;MACbjB,YAAY,CAACiB,QAAQ,CAACC,IAAV,CAAZ;IACD,CAHH;EAIC,CANQ,EAMN,EANM,CAAT,CAda,CAqBb;;EAMAb,OAAO,CAACC,GAAR,CAAYP,SAAZ;EACA,oBACE;IAAA,wBACE;MAAA,uBACE,QAAC,KAAD;QAAO,WAAW,EAAC,gBAAnB;QAAoC,QAAQ,EAAE,EAA9C;QAAkD,KAAK,EAAC,MAAxD;QAA+D,cAAY,EAA3E;QAA+E,QAAQ,EAAEE;MAAzF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,aAAD;MAAe,KAAK,EAAIM;IAAxB;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD;;GApCQX,G;;KAAAA,G;AAsCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}